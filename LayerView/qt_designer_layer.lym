<?xml version="1.0" encoding="utf-8"?>
<klayout-macro>
 <description>LayerView</description>
 <version/>
 <category/>
 <prolog/>
 <epilog/>
 <doc/>
 <autorun>false</autorun> 
 <autorun-early>false</autorun-early>
 <shortcut/>
 <show-in-menu>true</show-in-menu>
 <group-name>IFKM</group-name>
 <menu-path>tools_menu.end</menu-path>
 <interpreter>ruby</interpreter>
 <dsl-interpreter-name/>
 <text>module MyMacro
 #http://www.klayout.de/doc/code/class_AbstractMenu.html
 #http://www.klayout.de/0.22/doc/programming/traditional.html
  include RBA

  # load the UI file
  # TODO: this is how to load a file from a path next to the .lym file
  # ui_file = QFile::new(QFileInfo::new($0).dir.filePath("MyDialog.ui"))
  # Initially we use the sample file provided as resoure
  
  ui_file = QFile::new(QFileInfo::new($0).dir.filePath("test2.ui"))
  ui_file.open(QIODevice::ReadOnly)
  dialog = QFormBuilder::new.load(ui_file, Application::instance.main_window)
  ui_file.close
  $cell_before = -1
  
  class B &lt; QTableWidget
    def mouseDoubleClickEvent
    spinBox.value = 0
    end
  end
  
  tableWidget = B::new(tableWidget)
  

  def dialog.setup
    button.clicked do
        
    end
    tableWidget.setHorizontalHeaderItem(0,QTableWidgetItem::new("Name"))
  end
  

#  QTableWidget::mousePressEvent(QMouseEvent *event)


def dialog.table_setup
    active_layout = RBA::LayoutView::current
    activeLayer = active_layout.begin_layers
#Class LayerProperties
    index = 0

    until activeLayer.at_end? do
           
      name = activeLayer.current.name
      for i in 0..name.length
             
        if activeLayer.current.source[0] === name[i]
          break
        end
      end
      
      for k in 0..activeLayer.current.source.to_s.length
             
        if activeLayer.current.source[k] === "@"
          break
        end
  
      end
         
            #######
      tableWidget.setColumnCount(2)
      tableWidget.setRowCount(index+1)
      tableWidget.setItem(index,0,QTableWidgetItem::new(name[0..(i-1)]))
      tableWidget.setItem(index,1,QTableWidgetItem::new(activeLayer.current.source[0..(k-1)]))
      activeLayer = activeLayer.next
      index = index + 1
          
end

  tableWidget.clicked do
  
    active_layout = RBA::LayoutView::current
    activeLayer = active_layout.begin_layers
   
    inhalt = tableWidget.item(tableWidget.currentRow,tableWidget.currentColumn)
    
   
    if($cell_before != -1 ) 
      newname = tableWidget.item($cell_before,0).text + tableWidget.item($cell_before,1).text
       line.text = newname
      for i in 0..$cell_before -1
        activeLayer = activeLayer.next
      end
      lp = activeLayer.current.dup
      lp.name = newname
      lp.source_datatype = 0
      active_layout.replace_layer_node(activeLayer, lp)
    
    end 
   
    #$cell_before = tableWidget.currentRow
    #spinBox.value = $cell_before
  end
  
  tableWidget.itemChanged do
    spinBox.value = spinBox.value + 1
  end

end


  dialog.setup
  dialog.table_setup
  dialog.exec  

end
#tableWidget</text>
</klayout-macro>
